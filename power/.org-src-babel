import sqlite3

class MetaSingleton(type):
    __instances = {}            # 数组
    def __call__(cls, *args, **kwards):
        if cls not in __instances:
            cls.__instances[cls] = super(MetaSingleton, cls).__call__(args, kwargs)

    return cls.__instances[cls]
...

class Database(metaclass=MetaSingleton):
    connection = None
    def connect(self):
        if self.connection is None:
            self.connection = sqlite3.connect()
            self.cursor = self.connection.cursor()

    return self.cursor

db1 = Database().connect()
db2 = Database().connect()

